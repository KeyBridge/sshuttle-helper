#!/usr/bin/env bash
# DESCRIPTION
#   Automatic proxy opening based on sshuttle
#
# USAGE
#   sudo proxy-ssh start[ username@server[:port]]
#   sudo proxy-ssh restart[ username@server[:port]]
#   sudo proxy-ssh stop
#
# AUTHOR
# 	Credit for the original script go to Salem Harrache's article:
#	    http://salem.harrache.info/proxy-socks-partout.html


### BEGIN INIT INFO
# Provides:          proxy-ssh
# Required-Start:    $local_fs $remote_fs $network $syslog $named
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/stop Transparent proxy server for VPN over SSH
# Description:       Provide a wrapper around sshuttle
### END INIT INFO


name=proxy

sshserver="$2"
user="${sshserver%%@*}"
server="${sshserver##*@}"
  host="${server%%:*}"
  port=${server##*:}
  port=${port:-22}

pidFile="$HOME"/.local/var/run/$name
mkdir -p "$(dirname "$pidFile")"

# Arrêt du service
function stop {
  if [[ -f "$pidFile" ]] ; then
    echo "Stopping $name..."
    sudo -u "$USER" kill -9 $(cat "$pidFile")
    sudo -u "$USER" rm "$pidFile" && echo "OK"
  fi
}

# Démarrage du service
function start {
  # malformed ssh address
  [[ "$sshserver" != *@* || -z "$user" || -z "$host" ]] && usage

  echo "Starting $name..."
  sudo -u "$USER" sshuttle \
    -r $user@$host:$port 0/0 \
    --dns -D \
    --pidfile "$pidFile" && echo "OK"
}


function usage() {
  echo "Usage: $(basename $0) start|restart[ username@server[:port]]|stop "
  exit 1
}


# commandes
case $1 in
  start)
    start
  ;;
  stop)
    stop
  ;;
  restart)
    stop
    start
  ;;
  *)
    usage
esac
